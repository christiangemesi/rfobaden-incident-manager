version: "3.9"
services:
  frontend:
    image: rfobaden/incident-manager/frontend:${RFO_STAGE}
    build:
      context: ../frontend/
      dockerfile: ../deploy/frontend/Dockerfile
      args:
        - RFO_BACKEND_URL=${RFO_BACKEND_URL}
    restart: always
    networks:
      - default
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.incident_manager-${RFO_STAGE}-frontend.rule=Host(`ip34.daniel-va.ch`)
      - traefik.http.routers.incident_manager-${RFO_STAGE}-frontend.entrypoints=https
      - traefik.http.services.incident_manager-${RFO_STAGE}-frontend.loadbalancer.server.port=3000
      - traefik.http.routers.incident_manager-${RFO_STAGE}-frontend.tls=true
      - traefik.http.routers.incident_manager-${RFO_STAGE}-frontend.tls.certresolver=generate_cert_resolver
    depends_on:
      - backend
    env_file:
      - .env

  backend:
    image: rfobaden/incident-manager/backend:${RFO_STAGE}
    build:
      context: ../
      dockerfile: deploy/backend/Dockerfile
    restart: always
    environment:
      - TZ=Europe/Zurich
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.incident_manager-${RFO_STAGE}-backend.rule=Host(`ip34.daniel-va.ch`) && (Path(`/api`) || PathPrefix(`/api/`))
      - traefik.http.routers.incident_manager-${RFO_STAGE}-backend.entrypoints=https
      - traefik.http.services.incident_manager-${RFO_STAGE}-backend.loadbalancer.server.port=8080
      - traefik.http.routers.incident_manager-${RFO_STAGE}-backend.tls=true
      - traefik.http.routers.incident_manager-${RFO_STAGE}-backend.tls.certresolver=generate_cert_resolver
    depends_on:
      - database
    env_file:
      - .env

  database:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=${RFO_DATABASE_NAME}
      - MYSQL_USER=${RFO_DATABASE_USERNAME}
      - MYSQL_PASSWORD=${RFO_DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${RFO_DATABASE_ROOT_PASSWORD}
    volumes:
      - database:/var/lib/mysql
    env_file:
      - .env

volumes:
  database:

networks:
  proxy:
    name: "proxy"
    external: true