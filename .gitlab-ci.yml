stages:
  - lint
  - test
  - analyze
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "development" || $CI_COMMIT_BRANCH == "master"

.backend_cache: &backend_cache
  key: backend-${$CI_COMMIT_REF_SLUG}
  paths:
    - backend/.gradle
    - backend/build
    - backend/.sonar/cache

.frontend_cache: &frontend_cache
  key: frontend-${$CI_COMMIT_REF_SLUG}
  paths:
    - frontend/node_modules
    - frontend/coverage
    - frontend/.sonar/cache

backend.checkstyle:
  stage: lint
  image: gradle:7.2.0-jdk11
  cache:
    <<: *backend_cache
    policy: push
  script:
    - cd backend
    - gradle --no-daemon clean checkstyleMain checkstyleTest

frontend.eslint:
  stage: lint
  image: node:16-alpine3.13
  cache:
    <<: *frontend_cache
    policy: push
  script:
    - cd frontend
    - npm install --quiet
    - npm run lint

backend.test:
  stage: test
  image: gradle:7.2.0-jdk11
  cache:
    <<: *backend_cache
  script:
    - cd backend
    - gradle --no-daemon test jacocoTestReport --rerun-tasks

frontend.test:
  stage: test
  image: node:16-alpine3.13
  cache:
    <<: *frontend_cache
  script:
    - cd frontend
    - npm run test -- --coverage

backend.sonarqube:
  stage: analyze
  image: gradle:7.2.0-jdk11
  cache:
    <<: *backend_cache
  allow_failure: true
  script:
    - cd backend
    - gradle --no-daemon sonarqube

frontend.sonarqube:
  stage: analyze
  image: sonarsource/sonar-scanner-cli:latest
  cache:
    <<: *frontend_cache
    policy: pull
  variables:
    EXCLUDE: node_modules/**
  allow_failure: true
  script:
    - cd frontend
    - sonar-scanner
        -Dsonar.qualitygate.wait=true
        -Dsonar.sources=.
        -Dsonar.language=js
        -Dsonar.projectKey=rfobaden-incident-manager_frontend
        -Dsonar.projectName=rfobaden-incident-manager_frontend

deploy.jenkins:
  stage: deploy
  image: curlimages/curl:7.80.0
  script:
    - |
      curl --user "${JENKINS_DEPLOY_USER}:${JENKINS_DEPLOY_TOKEN}" "https://im.rfobaden.ch/jenkins/job/IncidentManager%20${CI_COMMIT_BRANCH}/build?token=${JENKINS_PIPELINE_TOKEN}&cause=gitlab-ci"


variables:
  GIT_DEPTH: 0