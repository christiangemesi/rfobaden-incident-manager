stages:
  - lint
  - test
  - analyze

variables:
  SONAR_HOST_URL: ${CI_SONARQUBE_HOST_URL}
  SONAR_TOKEN: ${CI_SONARQUBE_TOKEN}
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache  

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "development" || $CI_COMMIT_BRANCH == "master"

frontend.eslint:
  stage: lint
  image: node:16-alpine3.11
  script:
    - cd frontend
    - npm install --quiet
    - npm run lint

backend.checkstyle:
  stage: lint
  image: gradle:7.2.0-jdk11
  script:
    - cd backend
    - gradle --no-daemon checkstyleMain checkstyleTest

backend.test:
  stage: test
  image: gradle:7.2.0-jdk11
  script:
    - cd backend
    - gradle clean test --rerun-tasks

analyze.sonarqube:
  image: sonarsource/sonar-scanner-cli:latest
  stage: analyze
  allow_failure: false
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true

cache:
  key: ${CI_JOB_NAME}
  paths:
    - backend/.gradle
    - .sonar/cache
